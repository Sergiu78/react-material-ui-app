[{"C:\\React\\material-ui-tut-lesson-1\\src\\index.js":"1","C:\\React\\material-ui-tut-lesson-1\\src\\App.js":"2","C:\\React\\material-ui-tut-lesson-1\\src\\pages\\Notes.js":"3","C:\\React\\material-ui-tut-lesson-1\\src\\pages\\Create.js":"4","C:\\React\\material-ui-tut-lesson-1\\src\\components\\NoteCard.js":"5","C:\\React\\material-ui-tut-lesson-1\\src\\components\\Layout.js":"6"},{"size":389,"mtime":1628611428458,"results":"7","hashOfConfig":"8"},{"size":825,"mtime":1628524029550,"results":"9","hashOfConfig":"8"},{"size":840,"mtime":1628611680407,"results":"10","hashOfConfig":"8"},{"size":3152,"mtime":1628340274007,"results":"11","hashOfConfig":"8"},{"size":1922,"mtime":1628609472269,"results":"12","hashOfConfig":"8"},{"size":3495,"mtime":1628608335400,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1luqs8u",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},"C:\\React\\material-ui-tut-lesson-1\\src\\index.js",[],"C:\\React\\material-ui-tut-lesson-1\\src\\App.js",[],["30","31"],"C:\\React\\material-ui-tut-lesson-1\\src\\pages\\Notes.js",[],"C:\\React\\material-ui-tut-lesson-1\\src\\pages\\Create.js",["32","33"],"import { Button, Container, FormControl, FormLabel, Radio, RadioGroup, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { makeStyles } from '@material-ui/core'\nimport { TextField } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles({\n  btn: {\n    fontSize: 20,\n    backgroundColor: 'violet',\n    '&:hover': {\n      backgroundColor: 'blue'\n    }\n  },\n  title: {\n    textDecoration: 'underline',\n    marginBottom: 20\n  },\n  field: {\n    marginBottom: 20,\n    marginTop: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('todos')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if(title == '') {\n      setTitleError(true)\n    }\n    if(details == '') {\n      setDetailsError(true)\n    }\n    if(title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({ title, details, category })\n      }\n    ).then(() => history.push('/'))\n\n    }\n  } \n\n  return (\n    <Container>\n      <Typography\n      className={classes.title}\n      variant=\"h6\"\n      color=\"textSecondary\"\n      component=\"h2\"\n      gutterBottom>\n         Create page\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField \n        onChange={(e) => setTitle(e.target.value)}\n        className={classes.field}\n        label=\"Note Title\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        fullWidth\n        required\n        error={titleError}/>\n\n         <TextField \n         onChange={(e) => setDetails(e.target.value)}\n        className={classes.field}\n        label=\"Details\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        multiline\n        rows={4}\n        fullWidth\n        required\n        error={detailsError}/>\n\n      <FormControl className={classes.field}>\n      <FormLabel>Note More</FormLabel>\n       <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n        <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n        <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n        <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n        <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n       </RadioGroup>\n      </FormControl>\n        \n       \n\n      <Button \n      className={classes.btn}\n      type=\"submit\" \n      color=\"secondary\"\n      variant=\"contained\"\n      endIcon={<ArrowForwardIosIcon />}\n      >\n          Submit\n      </Button>\n      </form>\n\n     \n      \n    </Container>\n  )\n}\n","C:\\React\\material-ui-tut-lesson-1\\src\\components\\NoteCard.js",["34","35","36"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Avatar, makeStyles } from '@material-ui/core';\r\nimport { brown, green, pink, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: (note) => {\r\n            if(note.category == 'work'){\r\n                return yellow[700]\r\n            }\r\n            if(note.category == 'money'){\r\n                return green[500]\r\n            }\r\n            if(note.category == 'todos'){\r\n                return pink[500]\r\n            }\r\n            \r\n             return brown[700]\r\n            \r\n        }\r\n    }\r\n})\r\n\r\nexport default function NoteCard({ note, handleDelete }) {\r\n\r\n    const classes = useStyles(note)\r\n\r\n    return (\r\n        <div>\r\n            <Card elevation={1}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>\r\n                            { note.category[0].toUpperCase() }\r\n                        </Avatar>\r\n                    }\r\n                     action={\r\n                        <IconButton onClick={() => handleDelete(note.id)}>\r\n                          <DeleteOutlined />\r\n                        </IconButton> } \r\n                        title={note.title}\r\n                        subheader={note.category}\r\n                        />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        { note.details}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\React\\material-ui-tut-lesson-1\\src\\components\\Layout.js",["37"],"import React from 'react'\r\nimport { AppBar, Avatar, Drawer, Toolbar } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { List } from '@material-ui/core'\r\nimport { ListItem } from '@material-ui/core'\r\nimport { ListItemIcon } from '@material-ui/core'\r\nimport { ListItemText } from '@material-ui/core'\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport { format } from 'date-fns'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    return {\r\n        page: {\r\n            background: '#f9f9f9',\r\n            width: '100%',\r\n            padding: theme.spacing(3)\r\n        },\r\n        drawer: {\r\n            width: drawerWidth\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth\r\n        },\r\n        root: {\r\n            display: 'flex'\r\n        },\r\n        active: {\r\n            background: '#f4f4f4'\r\n        },\r\n        title: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        appbar: {\r\n            width: `calc(100% - ${drawerWidth}px)`\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        date: {\r\n            flexGrow: 1\r\n        },\r\n        avatar: {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n    \r\n    \r\n})\r\n\r\nexport default function Layout({ children }) {\r\n\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'My Notes',\r\n            icon: <SubjectOutlined color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: 'Create Notes',\r\n            icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n            path: '/create'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n        <AppBar \r\n        className={classes.appbar}\r\n        elevation={0}>\r\n            <Toolbar>\r\n                <Typography className={classes.date}>\r\n                  Today is the { format(new Date(), 'do MMMM Y') }\r\n                </Typography>\r\n                <Typography>\r\n                    Mario\r\n                </Typography>\r\n                <Avatar src='/mario.png' className={classes.avatar} />\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n            <Drawer \r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            anchor=\"left\"\r\n            classes={{ paper: classes.drawerPaper }}>\r\n                <div>\r\n                    <Typography variant=\"h5\" className={classes.title}>\r\n                        Material App\r\n                    </Typography>\r\n                </div>\r\n                <List>\r\n                { menuItems.map(item => (\r\n                    <ListItem\r\n                    button \r\n                    key={item.text}\r\n                    onClick={() => history.push(item.path)}\r\n                    className={location.pathname == item.path ? classes.active : null}>\r\n                        <ListItemIcon>{ item.icon }</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                    </ListItem>\r\n                ))}\r\n                \r\n            </List>\r\n            </Drawer>\r\n\r\n            \r\n\r\n            <div className={classes.page}>\r\n                <div className={classes.toolbar}></div>\r\n              { children }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":45,"column":14,"nodeType":"44","messageId":"45","endLine":45,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":48,"column":16,"nodeType":"44","messageId":"45","endLine":48,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":14,"column":30,"nodeType":"44","messageId":"45","endLine":14,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":17,"column":30,"nodeType":"44","messageId":"45","endLine":17,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":20,"column":30,"nodeType":"44","messageId":"45","endLine":20,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":104,"column":50,"nodeType":"44","messageId":"45","endLine":104,"endColumn":52},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]