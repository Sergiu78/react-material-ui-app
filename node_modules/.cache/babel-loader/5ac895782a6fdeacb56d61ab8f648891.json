{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\material-ui-tut-lesson-1\\\\src\\\\components\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { List } from '@material-ui/core';\nimport { ListItem } from '@material-ui/core';\nimport { ListItemIcon } from '@material-ui/core';\nimport { ListItemText } from '@material-ui/core';\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%'\n  },\n  drawer: {\n    width: drawerWidth\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  root: {\n    display: 'flex'\n  }\n});\nexport default function Layout({\n  children\n}) {\n  _s();\n\n  const classes = useStyles();\n  const menuItems = [{\n    text: 'My Notes',\n    icon: /*#__PURE__*/_jsxDEV(SubjectOutlined, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this),\n    path: '/'\n  }, {\n    text: 'Create Notes',\n    icon: /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlined, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this),\n    path: '/create'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      anchor: \"left\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Material App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, item.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.page,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Layout, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/React/material-ui-tut-lesson-1/src/components/Layout.js"],"names":["React","Drawer","Typography","makeStyles","List","ListItem","ListItemIcon","ListItemText","AddCircleOutlineOutlined","SubjectOutlined","drawerWidth","useStyles","page","background","width","drawer","drawerPaper","root","display","Layout","children","classes","menuItems","text","icon","path","paper","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,oBAA1D;;AAEA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,SADV;AAEFC,IAAAA,KAAK,EAAE;AAFL,GADmB;AAKzBC,EAAAA,MAAM,EAAE;AACJD,IAAAA,KAAK,EAAEJ;AADH,GALiB;AAQzBM,EAAAA,WAAW,EAAE;AACTF,IAAAA,KAAK,EAAEJ;AADE,GARY;AAWzBO,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP;AAXmB,CAAD,CAA5B;AAiBA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAEzC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAMW,SAAS,GAAG,CACd;AACIC,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,eAAE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADc,EAMd;AACIF,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,IAAI,eAAE,QAAC,wBAAD;AAA0B,MAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANc,CAAlB;AAaA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACJ,IAAxB;AAAA,4BACI,QAAC,MAAD;AACA,MAAA,SAAS,EAAEI,OAAO,CAACN,MADnB;AAEA,MAAA,OAAO,EAAC,WAFR;AAGA,MAAA,MAAM,EAAC,MAHP;AAIA,MAAA,OAAO,EAAE;AAAEW,QAAAA,KAAK,EAAEL,OAAO,CAACL;AAAjB,OAJT;AAAA,8BAKI;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI,QAAC,IAAD;AAAA,kBACEM,SAAS,CAACK,GAAV,CAAcC,IAAI,iBAChB,QAAC,QAAD;AACA,UAAA,MAAM,MADN;AAAA,kCAII,QAAC,YAAD;AAAA,sBAAgBA,IAAI,CAACJ;AAArB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEI,IAAI,CAACL;AAA5B;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAEKK,IAAI,CAACL,IAFV;AAAA;AAAA;AAAA;AAAA,gBADF;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2BI;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACT,IAAxB;AAAA,gBACIQ;AADJ;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAnDuBD,M;UAEJR,S;;;KAFIQ,M","sourcesContent":["import React from 'react'\r\nimport { Drawer } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { List } from '@material-ui/core'\r\nimport { ListItem } from '@material-ui/core'\r\nimport { ListItemIcon } from '@material-ui/core'\r\nimport { ListItemText } from '@material-ui/core'\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles({\r\n    page: {\r\n        background: '#f9f9f9',\r\n        width: '100%'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    root: {\r\n        display: 'flex'\r\n    }\r\n    \r\n})\r\n\r\nexport default function Layout({ children }) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'My Notes',\r\n            icon: <SubjectOutlined color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: 'Create Notes',\r\n            icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n            path: '/create'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer \r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            anchor=\"left\"\r\n            classes={{ paper: classes.drawerPaper }}>\r\n                <div>\r\n                    <Typography variant=\"h5\">\r\n                        Material App\r\n                    </Typography>\r\n                </div>\r\n                <List>\r\n                { menuItems.map(item => (\r\n                    <ListItem\r\n                    button \r\n                    key={item.text}\r\n                    >\r\n                        <ListItemIcon>{ item.icon }</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                    </ListItem>\r\n                ))}\r\n                \r\n            </List>\r\n            </Drawer>\r\n\r\n            \r\n\r\n            <div className={classes.page}>\r\n              { children }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}